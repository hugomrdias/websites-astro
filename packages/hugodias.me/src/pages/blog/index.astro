---
import { type CollectionEntry, getCollection } from 'astro:content'
import PageLayout from '@layouts/PageLayout.astro'
import ArrowCard from '@components/ArrowCard.astro'
import { BLOG } from '@consts'

const data = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

type Acc = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <div class="Section">
    <h1>Blog</h1>
    {
      years.map((year) => (
        <section class="animate">
          <h2>{year}</h2>
          <ul class="Items">
            {posts[year].map((post) => (
              <li>
                <ArrowCard entry={post} />
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </div>
</PageLayout>
