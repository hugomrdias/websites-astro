---
import { getCollection, render } from 'astro:content'
import PageLayout from '@layouts/PageLayout.astro'
import { TALKS } from '@consts'
import Link from '@components/Link.astro'
import { formatDate } from '@lib/utils'
import ThumbGalleryNotion from '@components/ThumbGalleryNotion.astro'

const speakingRaw = await getCollection('speaking')
const speaking = (
  await Promise.all(
    speakingRaw.map(async (item) => {
      const { Content } = await render(item)

      return { ...item, Content }
    })
  )
).sort(
  (a, b) =>
    new Date(b.data.properties.date).valueOf() -
    new Date(a.data.properties.date).valueOf()
)
---

<PageLayout title={TALKS.TITLE} description={TALKS.DESCRIPTION}>
  <h1 class="animate">Talks</h1>
  <ul class="Items gap-2">
    {
      speaking.map((entry) => (
        <li class="animate">
          <small>{formatDate(entry.data.properties.date)}</small>
          <h4 class="m-0">
            <Link href={entry.data.properties.url as string}>
              {entry.data.properties.Name} at {entry.data.properties.event}
            </Link>
          </h4>
          {entry.data.properties.location}
          <article>
            <entry.Content />
            <ThumbGalleryNotion images={entry.data.properties.images} />
          </article>
        </li>
      ))
    }
  </ul>
</PageLayout>
