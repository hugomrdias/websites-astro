---
import '@fontsource-variable/inter'
import '@fontsource-variable/playfair-display'
import { ClientRouter } from 'astro:transitions'
import { getImage } from 'astro:assets'
import type { ImageMetadata } from 'astro'
// @ts-expect-error - no types
import { pwaInfo } from 'virtual:pwa-info'
// @ts-expect-error - no types
import { pwaAssetsHead } from 'virtual:pwa-assets/head'
import '../styles/global.css'

import playfairDisplay from '@fontsource-variable/playfair-display/files/playfair-display-latin-wght-normal.woff2?url'
import inter from '@fontsource-variable/inter/files/inter-latin-wght-normal.woff2?url'
import defaultOgImage from '../assets/og.png'
import { SITE } from '@consts'

export interface Props {
  title?: string;
  description?: string;
  lang?: string;
  image?: ImageMetadata
  type?: 'article' | 'website'
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const { title = SITE.NAME, description = SITE.DESCRIPTION, lang = "pt", image = defaultOgImage, type = 'website' } = Astro.props;
const ogImage = await getImage({
  src: image,
  width: 1200,
  height: 628,
  fit: 'cover',
})

const googleMapsUrl = `https://maps.googleapis.com/maps/api/js?key=${import.meta.env.GOOGLE_MAPS}&callback=console.debug&libraries=maps,marker&v=beta&loading=async`

---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={SITE.KEYWORDS} />
    
    <!-- Open Graph -->
    <meta property="og:site_name" content={SITE.NAME} />
    <meta property="og:locale" content={lang === 'pt' ? 'pt_PT' : 'en_US'} />
    <meta property="og:type" content={type} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(ogImage.src, Astro.url)} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="628" />
    <meta property="og:logo" content={new URL('/favicon.png', Astro.url)} />

    
    <!-- Twitter Card -->
    <meta content="@ivslegal" name="twitter:creator" />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(ogImage.src, Astro.url)} />

    
    <!-- Fonts -->
    <link rel="preload" href={playfairDisplay} as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href={inter} as="font" type="font/woff2" crossorigin="anonymous">
    <!-- PWA -->
    {
      pwaAssetsHead.themeColor && (
        <meta name="theme-color" content={pwaAssetsHead.themeColor.content} />
      )
    }
    {
      pwaAssetsHead.links.map(
        (
          link: astroHTML.JSX.IntrinsicAttributes & astroHTML.JSX.LinkHTMLAttributes
        ) => <link {...link} />
      )
    }
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
    
    <script src="/src/pwa.ts"></script>
    
    <ClientRouter />

  </head>
  <body class="font-sans text-navy-900 bg-white">
    <slot />
  </body>
  <script async src={googleMapsUrl}>
    </script>

    <script is:inline src="https://js.hcaptcha.com/1/api.js?hl=en&render=explicit&recaptchacompat=off" async defer></script>


</html>